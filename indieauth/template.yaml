AWSTemplateFormatVersion: '2010-09-09'
Transform: 'AWS::Serverless-2016-10-31'
Description: |
  indieauth
  Sample SAM Template for indieauth
Globals:
  Function:
    Timeout: 3
Resources:
  IndieAuthCMK:
    Type: 'AWS::KMS::Key'
    Properties:
      KeyPolicy:
        Id: DefaultKmsPolicy
        Version: '2012-10-17'
        Statement:
        - Sid: Enable IAM User Permissions
          Effect: Allow
          Principal:
            AWS:
            - Fn::Join:
              - ":"
              - - 'arn:aws:iam:'
                - Ref: AWS::AccountId
                - root
          Action: kms:*
          Resource: "*"
        - Sid: Allow access for Key Administrators
          Effect: Allow
          Principal:
            AWS:
            - Fn::Join:
              - ":"
              - - 'arn:aws:iam:'
                - Ref: AWS::AccountId
                - Ref: AdministratorPrincipal
          Action:
          - kms:Create*
          - kms:Describe*
          - kms:Enable*
          - kms:List*
          - kms:Put*
          - kms:Update*
          - kms:Revoke*
          - kms:Disable*
          - kms:Get*
          - kms:Delete*
          - kms:ScheduleKeyDeletion
          - kms:CancelKeyDeletion
          Resource: "*"
        - Sid: Allow use of the key
          Effect: Allow
          Principal:
            AWS:
            - Fn::Join:
              - ":"
              - - 'arn:aws:iam:'
                - Ref: AWS::AccountId
                - Ref: UserPrincipal
          Action:
          - kms:Encrypt
          - kms:Decrypt
          - kms:ReEncrypt*
          - kms:GenerateDataKey*
          - kms:DescribeKey
          Resource: "*"
        - Sid: Allow attachment of persistent resources
          Effect: Allow
          Principal:
            AWS:
            - Fn::Join:
              - ":"
              - - 'arn:aws:iam:'
                - Ref: AWS::AccountId
                - Ref: UserPrincipal
          Action:
          - kms:CreateGrant
          - kms:ListGrants
          - kms:RevokeGrant
          Resource: "*"
          Condition:
            Bool:
              kms:GrantIsForAWSResource: true
        - Sid: Allow decrypting of any value encrypted under this key.
          Effect: Allow
          Principal:
            AWS:
            - Fn::GetAtt:
              - DecryptAnythingRole
              - Arn
          Action:
          - kms:Decrypt
          Resource: "*"
        - Sid: Allow encrypting under this key.
          Effect: Allow
          Principal:
            AWS:
            - Fn::GetAtt:
              - EncryptAnythingRole
              - Arn
          Action:
          - kms:Encrypt
          - kms:GenerateDataKey
          Resource: "*"
  AuthEndpointFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: auth/
      Handler: app.auth_handler
      Runtime: python3.6
      Events:
        AuthEndpointGET:
          Type: Api
          Properties:
            Path: /auth
            Method: get
      Description: ''
  CallbackEndpointFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: auth/
      Handler: app.callback_handler
      Runtime: python3.6
      Events:
        CallbackEndpointGET:
          Type: Api
          Properties:
            Path: /callback
            Method: get
  AuthCodeCheckFunction:
    Type: 'AWS::Serverless::Function'
    Properties:
      CodeUri: auth/
      Handler: app.auth_code_check
      Runtime: python3.6
      Events:
        AuthEndpointPOST:
          Type: Api
          Properties:
            Path: /auth
            Method: post
Outputs:
  AuthEndpoint:
    Description: API Gateway endpoint URL for Prod auth endpoint
    Value:
      'Fn::Sub': >-
        https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/auth
  CallbackEndpoint:
    Description: API Gateway endpoint URL for Prod callback endpoint
    Value:
      'Fn::Sub': >-
        https://${ServerlessRestApi}.execute-api.${AWS::Region}.amazonaws.com/Prod/callback
